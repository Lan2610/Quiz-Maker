import streamlit as st
from PyPDF2 import PdfReader
from docx import Document
from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lsa import LsaSummarizer
import random

st.set_page_config(page_title="AI Quiz Maker", layout="centered")
st.title("üß† AI T√≥m t·∫Øt & T·∫°o c√¢u h·ªèi tr·∫Øc nghi·ªám")

def read_pdf(file):
    reader = PdfReader(file)
    text = ""
    for page in reader.pages:
        content = page.extract_text()
        if content:
            text += content + "\n"
    return text

def read_docx(file):
    doc = Document(file)
    return "\n".join([p.text for p in doc.paragraphs if p.text.strip()])

def read_txt(file):
    return file.read().decode("utf-8")

def summarize_text(text, sentence_count=5):
    parser = PlaintextParser.from_string(text, Tokenizer("english"))
    summarizer = LsaSummarizer()
    summary = summarizer(parser.document, sentence_count)
    return " ".join(str(sentence) for sentence in summary)

def generate_questions(summary_text, num_questions=3):
    sentences = summary_text.split(". ")
    questions = []
    for i in range(min(num_questions, len(sentences))):
        sentence = sentences[i].strip()
        if len(sentence.split()) < 4:
            continue
        answer = sentence.split()[-1].strip(".")
        question = sentence.replace(answer, "______")
        options = [answer, answer[::-1], answer.upper()]
        random.shuffle(options)
        questions.append({
            "question": question,
            "options": options,
            "answer": answer
        })
    return questions

uploaded_file = st.file_uploader("üìÑ T·∫£i t√†i li·ªáu (PDF, DOCX, TXT)", type=["pdf", "docx", "txt"])

if uploaded_file:
    if uploaded_file.type == "application/pdf":
        text = read_pdf(uploaded_file)
    elif uploaded_file.type in ["application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/msword"]:
        text = read_docx(uploaded_file)
    else:
        text = read_txt(uploaded_file)

    st.subheader("üìå T√≥m t·∫Øt n·ªôi dung:")
    summary = summarize_text(text)
    st.write(summary)

    st.subheader("‚ùì C√¢u h·ªèi tr·∫Øc nghi·ªám")
    quiz = generate_questions(summary)

    for idx, q in enumerate(quiz):
        st.markdown(f"**C√¢u {idx+1}:** {q['question']}")
        ans = st.radio("Ch·ªçn ƒë√°p √°n:", q['options'], key=f"q_{idx}")
        if st.button(f"Ki·ªÉm tra c√¢u {idx+1}"):
            if ans == q["answer"]:
                st.success("‚úÖ Ch√≠nh x√°c!")
            else:
                st.error(f"‚ùå Sai r·ªìi. ƒê√°p √°n ƒë√∫ng: {q['answer']}")
